/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.285
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the AddProjectParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddProjectParams{}

// AddProjectParams struct for AddProjectParams
type AddProjectParams struct {
	Name string `json:"name"`
	Description string `json:"description"`
}

// NewAddProjectParams instantiates a new AddProjectParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddProjectParams(name string, description string) *AddProjectParams {
	this := AddProjectParams{}
	this.Name = name
	this.Description = description
	return &this
}

// NewAddProjectParamsWithDefaults instantiates a new AddProjectParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddProjectParamsWithDefaults() *AddProjectParams {
	this := AddProjectParams{}
	return &this
}

// GetName returns the Name field value
func (o *AddProjectParams) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddProjectParams) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddProjectParams) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *AddProjectParams) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *AddProjectParams) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *AddProjectParams) SetDescription(v string) {
	o.Description = v
}

func (o AddProjectParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddProjectParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	return toSerialize, nil
}

type NullableAddProjectParams struct {
	value *AddProjectParams
	isSet bool
}

func (v NullableAddProjectParams) Get() *AddProjectParams {
	return v.value
}

func (v *NullableAddProjectParams) Set(val *AddProjectParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAddProjectParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAddProjectParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddProjectParams(val *AddProjectParams) *NullableAddProjectParams {
	return &NullableAddProjectParams{value: val, isSet: true}
}

func (v NullableAddProjectParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddProjectParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


