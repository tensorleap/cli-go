/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.321
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the AnalyzeGraphParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnalyzeGraphParams{}

// AnalyzeGraphParams struct for AnalyzeGraphParams
type AnalyzeGraphParams struct {
	Graph            ModelGraph `json:"graph"`
	DatasetVersionId string     `json:"datasetVersionId"`
	ProjectId        string     `json:"projectId"`
	RequestToken     string     `json:"requestToken"`
}

// NewAnalyzeGraphParams instantiates a new AnalyzeGraphParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyzeGraphParams(graph ModelGraph, datasetVersionId string, projectId string, requestToken string) *AnalyzeGraphParams {
	this := AnalyzeGraphParams{}
	this.Graph = graph
	this.DatasetVersionId = datasetVersionId
	this.ProjectId = projectId
	this.RequestToken = requestToken
	return &this
}

// NewAnalyzeGraphParamsWithDefaults instantiates a new AnalyzeGraphParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyzeGraphParamsWithDefaults() *AnalyzeGraphParams {
	this := AnalyzeGraphParams{}
	return &this
}

// GetGraph returns the Graph field value
func (o *AnalyzeGraphParams) GetGraph() ModelGraph {
	if o == nil {
		var ret ModelGraph
		return ret
	}

	return o.Graph
}

// GetGraphOk returns a tuple with the Graph field value
// and a boolean to check if the value has been set.
func (o *AnalyzeGraphParams) GetGraphOk() (*ModelGraph, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Graph, true
}

// SetGraph sets field value
func (o *AnalyzeGraphParams) SetGraph(v ModelGraph) {
	o.Graph = v
}

// GetDatasetVersionId returns the DatasetVersionId field value
func (o *AnalyzeGraphParams) GetDatasetVersionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DatasetVersionId
}

// GetDatasetVersionIdOk returns a tuple with the DatasetVersionId field value
// and a boolean to check if the value has been set.
func (o *AnalyzeGraphParams) GetDatasetVersionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DatasetVersionId, true
}

// SetDatasetVersionId sets field value
func (o *AnalyzeGraphParams) SetDatasetVersionId(v string) {
	o.DatasetVersionId = v
}

// GetProjectId returns the ProjectId field value
func (o *AnalyzeGraphParams) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *AnalyzeGraphParams) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *AnalyzeGraphParams) SetProjectId(v string) {
	o.ProjectId = v
}

// GetRequestToken returns the RequestToken field value
func (o *AnalyzeGraphParams) GetRequestToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestToken
}

// GetRequestTokenOk returns a tuple with the RequestToken field value
// and a boolean to check if the value has been set.
func (o *AnalyzeGraphParams) GetRequestTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestToken, true
}

// SetRequestToken sets field value
func (o *AnalyzeGraphParams) SetRequestToken(v string) {
	o.RequestToken = v
}

func (o AnalyzeGraphParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnalyzeGraphParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["graph"] = o.Graph
	toSerialize["datasetVersionId"] = o.DatasetVersionId
	toSerialize["projectId"] = o.ProjectId
	toSerialize["requestToken"] = o.RequestToken
	return toSerialize, nil
}

type NullableAnalyzeGraphParams struct {
	value *AnalyzeGraphParams
	isSet bool
}

func (v NullableAnalyzeGraphParams) Get() *AnalyzeGraphParams {
	return v.value
}

func (v *NullableAnalyzeGraphParams) Set(val *AnalyzeGraphParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyzeGraphParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyzeGraphParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyzeGraphParams(val *AnalyzeGraphParams) *NullableAnalyzeGraphParams {
	return &NullableAnalyzeGraphParams{value: val, isSet: true}
}

func (v NullableAnalyzeGraphParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalyzeGraphParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
