/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.285
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the SessionSaveData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SessionSaveData{}

// SessionSaveData struct for SessionSaveData
type SessionSaveData struct {
	Epoch float64 `json:"epoch"`
	GlobalStep float64 `json:"globalStep"`
	TrainRunNumber float64 `json:"trainRunNumber"`
}

// NewSessionSaveData instantiates a new SessionSaveData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionSaveData(epoch float64, globalStep float64, trainRunNumber float64) *SessionSaveData {
	this := SessionSaveData{}
	this.Epoch = epoch
	this.GlobalStep = globalStep
	this.TrainRunNumber = trainRunNumber
	return &this
}

// NewSessionSaveDataWithDefaults instantiates a new SessionSaveData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionSaveDataWithDefaults() *SessionSaveData {
	this := SessionSaveData{}
	return &this
}

// GetEpoch returns the Epoch field value
func (o *SessionSaveData) GetEpoch() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Epoch
}

// GetEpochOk returns a tuple with the Epoch field value
// and a boolean to check if the value has been set.
func (o *SessionSaveData) GetEpochOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Epoch, true
}

// SetEpoch sets field value
func (o *SessionSaveData) SetEpoch(v float64) {
	o.Epoch = v
}

// GetGlobalStep returns the GlobalStep field value
func (o *SessionSaveData) GetGlobalStep() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.GlobalStep
}

// GetGlobalStepOk returns a tuple with the GlobalStep field value
// and a boolean to check if the value has been set.
func (o *SessionSaveData) GetGlobalStepOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GlobalStep, true
}

// SetGlobalStep sets field value
func (o *SessionSaveData) SetGlobalStep(v float64) {
	o.GlobalStep = v
}

// GetTrainRunNumber returns the TrainRunNumber field value
func (o *SessionSaveData) GetTrainRunNumber() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TrainRunNumber
}

// GetTrainRunNumberOk returns a tuple with the TrainRunNumber field value
// and a boolean to check if the value has been set.
func (o *SessionSaveData) GetTrainRunNumberOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrainRunNumber, true
}

// SetTrainRunNumber sets field value
func (o *SessionSaveData) SetTrainRunNumber(v float64) {
	o.TrainRunNumber = v
}

func (o SessionSaveData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SessionSaveData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["epoch"] = o.Epoch
	toSerialize["globalStep"] = o.GlobalStep
	toSerialize["trainRunNumber"] = o.TrainRunNumber
	return toSerialize, nil
}

type NullableSessionSaveData struct {
	value *SessionSaveData
	isSet bool
}

func (v NullableSessionSaveData) Get() *SessionSaveData {
	return v.value
}

func (v *NullableSessionSaveData) Set(val *SessionSaveData) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionSaveData) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionSaveData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionSaveData(val *SessionSaveData) *NullableSessionSaveData {
	return &NullableSessionSaveData{value: val, isSet: true}
}

func (v NullableSessionSaveData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionSaveData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


