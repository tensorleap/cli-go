/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.301
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the SignedStoredVisualization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SignedStoredVisualization{}

// SignedStoredVisualization struct for SignedStoredVisualization
type SignedStoredVisualization struct {
	SignedUrl           string                      `json:"signedUrl"`
	VisualizationEntity VisualizationEntityResponse `json:"visualizationEntity"`
}

// NewSignedStoredVisualization instantiates a new SignedStoredVisualization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignedStoredVisualization(signedUrl string, visualizationEntity VisualizationEntityResponse) *SignedStoredVisualization {
	this := SignedStoredVisualization{}
	this.SignedUrl = signedUrl
	this.VisualizationEntity = visualizationEntity
	return &this
}

// NewSignedStoredVisualizationWithDefaults instantiates a new SignedStoredVisualization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignedStoredVisualizationWithDefaults() *SignedStoredVisualization {
	this := SignedStoredVisualization{}
	return &this
}

// GetSignedUrl returns the SignedUrl field value
func (o *SignedStoredVisualization) GetSignedUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignedUrl
}

// GetSignedUrlOk returns a tuple with the SignedUrl field value
// and a boolean to check if the value has been set.
func (o *SignedStoredVisualization) GetSignedUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignedUrl, true
}

// SetSignedUrl sets field value
func (o *SignedStoredVisualization) SetSignedUrl(v string) {
	o.SignedUrl = v
}

// GetVisualizationEntity returns the VisualizationEntity field value
func (o *SignedStoredVisualization) GetVisualizationEntity() VisualizationEntityResponse {
	if o == nil {
		var ret VisualizationEntityResponse
		return ret
	}

	return o.VisualizationEntity
}

// GetVisualizationEntityOk returns a tuple with the VisualizationEntity field value
// and a boolean to check if the value has been set.
func (o *SignedStoredVisualization) GetVisualizationEntityOk() (*VisualizationEntityResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VisualizationEntity, true
}

// SetVisualizationEntity sets field value
func (o *SignedStoredVisualization) SetVisualizationEntity(v VisualizationEntityResponse) {
	o.VisualizationEntity = v
}

func (o SignedStoredVisualization) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SignedStoredVisualization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["signedUrl"] = o.SignedUrl
	toSerialize["visualizationEntity"] = o.VisualizationEntity
	return toSerialize, nil
}

type NullableSignedStoredVisualization struct {
	value *SignedStoredVisualization
	isSet bool
}

func (v NullableSignedStoredVisualization) Get() *SignedStoredVisualization {
	return v.value
}

func (v *NullableSignedStoredVisualization) Set(val *SignedStoredVisualization) {
	v.value = val
	v.isSet = true
}

func (v NullableSignedStoredVisualization) IsSet() bool {
	return v.isSet
}

func (v *NullableSignedStoredVisualization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignedStoredVisualization(val *SignedStoredVisualization) *NullableSignedStoredVisualization {
	return &NullableSignedStoredVisualization{value: val, isSet: true}
}

func (v NullableSignedStoredVisualization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignedStoredVisualization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
