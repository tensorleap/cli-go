/*
node-server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.321
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tensorleapapi

import (
	"encoding/json"
)

// checks if the UpdateOrganizationPublicNameRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOrganizationPublicNameRequest{}

// UpdateOrganizationPublicNameRequest struct for UpdateOrganizationPublicNameRequest
type UpdateOrganizationPublicNameRequest struct {
	Id         string `json:"_id"`
	PublicName string `json:"publicName"`
}

// NewUpdateOrganizationPublicNameRequest instantiates a new UpdateOrganizationPublicNameRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrganizationPublicNameRequest(id string, publicName string) *UpdateOrganizationPublicNameRequest {
	this := UpdateOrganizationPublicNameRequest{}
	this.Id = id
	this.PublicName = publicName
	return &this
}

// NewUpdateOrganizationPublicNameRequestWithDefaults instantiates a new UpdateOrganizationPublicNameRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrganizationPublicNameRequestWithDefaults() *UpdateOrganizationPublicNameRequest {
	this := UpdateOrganizationPublicNameRequest{}
	return &this
}

// GetId returns the Id field value
func (o *UpdateOrganizationPublicNameRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationPublicNameRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UpdateOrganizationPublicNameRequest) SetId(v string) {
	o.Id = v
}

// GetPublicName returns the PublicName field value
func (o *UpdateOrganizationPublicNameRequest) GetPublicName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicName
}

// GetPublicNameOk returns a tuple with the PublicName field value
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationPublicNameRequest) GetPublicNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicName, true
}

// SetPublicName sets field value
func (o *UpdateOrganizationPublicNameRequest) SetPublicName(v string) {
	o.PublicName = v
}

func (o UpdateOrganizationPublicNameRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOrganizationPublicNameRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["_id"] = o.Id
	toSerialize["publicName"] = o.PublicName
	return toSerialize, nil
}

type NullableUpdateOrganizationPublicNameRequest struct {
	value *UpdateOrganizationPublicNameRequest
	isSet bool
}

func (v NullableUpdateOrganizationPublicNameRequest) Get() *UpdateOrganizationPublicNameRequest {
	return v.value
}

func (v *NullableUpdateOrganizationPublicNameRequest) Set(val *UpdateOrganizationPublicNameRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrganizationPublicNameRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrganizationPublicNameRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrganizationPublicNameRequest(val *UpdateOrganizationPublicNameRequest) *NullableUpdateOrganizationPublicNameRequest {
	return &NullableUpdateOrganizationPublicNameRequest{value: val, isSet: true}
}

func (v NullableUpdateOrganizationPublicNameRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrganizationPublicNameRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
